---
swagger: "2.0"
info:
  description: "Kipartman api specifications"
  version: "1.0.0"
  title: "Kipartman"
  termsOfService: "http://swagger.io/terms/"
  contact:
    name: "Sebastien Besombes"
    url: "https://github.com/turdusmerula/kipartman"
    email: "--"
  license:
    name: "GPL V3"
    url: "https://raw.githubusercontent.com/turdusmerula/kipartman/master/LICENSE"
host: "localhost:8200"
basePath: "/api"
schemes:
- "http"
consumes:
- "application/json"
produces:
- "application/json"
paths:
  /parts/categories:
    get:
      description: "Return all categories for parts"
      operationId: "find_parts_categories"
      parameters: []
      responses:
        200:
          description: "List of categories"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/PartCategory"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
    post:
      description: "Creates a new part category"
      operationId: "add_parts_category"
      parameters:
      - in: "body"
        name: "category"
        description: "Category to add"
        required: true
        schema:
          $ref: "#/definitions/PartCategoryNew"
      responses:
        200:
          description: "Created category"
          schema:
            $ref: "#/definitions/PartCategory"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
  /parts/categories/{category_id}:
    get:
      description: "Return a part category"
      operationId: "find_parts_category"
      parameters:
      - name: "category_id"
        in: "path"
        description: "Category id"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "Categories"
          schema:
            $ref: "#/definitions/PartCategory"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
    put:
      description: "Update part category"
      operationId: "update_parts_category"
      parameters:
      - name: "category_id"
        in: "path"
        description: "Category id"
        required: true
        type: "integer"
        format: "int64"
      - in: "body"
        name: "category"
        description: "Category to update"
        required: true
        schema:
          $ref: "#/definitions/PartCategoryNew"
      responses:
        200:
          description: "Updated pärt category"
          schema:
            $ref: "#/definitions/PartCategory"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
    delete:
      description: "Delete part category"
      operationId: "delete_parts_category"
      parameters:
      - name: "category_id"
        in: "path"
        description: "Category id"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "Deleted ok"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
  /parts:
    get:
      description: "Return all parts"
      operationId: "find_parts"
      parameters:
      - name: "category"
        in: "query"
        description: "Filter by category"
        required: false
        type: "integer"
        format: "int64"
      - name: "with_offers"
        in: "query"
        description: "Include offers in answer"
        required: false
        type: "boolean"
      - name: "with_parameters"
        in: "query"
        description: "Include parameters in answer"
        required: false
        type: "boolean"
      - name: "with_childs"
        in: "query"
        description: "Include childs in answer"
        required: false
        type: "boolean"
      - name: "with_distributors"
        in: "query"
        description: "Include distributors in answer"
        required: false
        type: "boolean"
      - name: "with_manufacturers"
        in: "query"
        description: "Include manufacturers in answer"
        required: false
        type: "boolean"
      - name: "search"
        in: "query"
        description: "Search for parts matching pattern"
        required: false
        type: "string"
      responses:
        200:
          description: "List of parts"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Part"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
    post:
      description: "Creates a new part"
      operationId: "add_part"
      parameters:
      - in: "body"
        name: "part"
        description: "Part to add"
        required: true
        schema:
          $ref: "#/definitions/PartNew"
      responses:
        200:
          description: "Created part"
          schema:
            $ref: "#/definitions/Part"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
  /parts/{part_id}:
    get:
      description: "Return a part"
      operationId: "find_part"
      parameters:
      - name: "part_id"
        in: "path"
        description: "Part id"
        required: true
        type: "integer"
        format: "int64"
      - name: "with_offers"
        in: "query"
        description: "Include offers in answer"
        required: false
        type: "boolean"
      - name: "with_parameters"
        in: "query"
        description: "Include parameters in answer"
        required: false
        type: "boolean"
      - name: "with_childs"
        in: "query"
        description: "Include childs in answer"
        required: false
        type: "boolean"
      - name: "with_distributors"
        in: "query"
        description: "Include distributors in answer"
        required: false
        type: "boolean"
      - name: "with_manufacturers"
        in: "query"
        description: "Include manufacturers in answer"
        required: false
        type: "boolean"
      responses:
        200:
          description: "Categories"
          schema:
            $ref: "#/definitions/Part"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
    put:
      description: "Update part"
      operationId: "update_part"
      parameters:
      - name: "part_id"
        in: "path"
        description: "Part id"
        required: true
        type: "integer"
        format: "int64"
      - in: "body"
        name: "part"
        description: "Part to update"
        required: true
        schema:
          $ref: "#/definitions/Part"
      responses:
        200:
          description: "Updated pärt"
          schema:
            $ref: "#/definitions/Part"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
    delete:
      description: "Delete part"
      operationId: "delete_part"
      parameters:
      - name: "part_id"
        in: "path"
        description: "Part id"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "Deleted ok"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
  /units:
    get:
      description: "Return list of units"
      operationId: "find_units"
      parameters:
      - name: "symbol"
        in: "query"
        description: "Search symbol"
        required: false
        type: "string"
      responses:
        200:
          description: "Units"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Unit"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
  /units/{unit_id}:
    get:
      description: "Return a unit"
      operationId: "find_unit"
      parameters:
      - name: "unit_id"
        in: "path"
        description: "Unit id"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "Unit"
          schema:
            $ref: "#/definitions/Unit"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
  /unitprefixes:
    get:
      description: "Return list of unit prefixes"
      operationId: "find_unit_prefixes"
      parameters:
      - name: "symbol"
        in: "query"
        description: "Search prefix symbol"
        required: false
        type: "string"
      responses:
        200:
          description: "Unit prefixes"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/UnitPrefix"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
  /unitprefixes/{unit_prefix_id}:
    get:
      description: "Return a unit prefixes"
      operationId: "find_unit_prefix"
      parameters:
      - name: "unit_prefix_id"
        in: "path"
        description: "Unit prefix id"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "Unit prefix"
          schema:
            $ref: "#/definitions/UnitPrefix"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
  /footprints/categories:
    get:
      description: "Return all categories for footprints"
      operationId: "find_footprints_categories"
      parameters: []
      responses:
        200:
          description: "List of categories"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/FootprintCategory"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
    post:
      description: "Creates a new footprint category"
      operationId: "add_footprints_category"
      parameters:
      - in: "body"
        name: "category"
        description: "Category to add"
        required: true
        schema:
          $ref: "#/definitions/FootprintCategoryNew"
      responses:
        200:
          description: "Created category"
          schema:
            $ref: "#/definitions/FootprintCategory"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
  /footprints/categories/{category_id}:
    get:
      description: "Return a footprint category"
      operationId: "find_footprints_category"
      parameters:
      - name: "category_id"
        in: "path"
        description: "Category id"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "Categories"
          schema:
            $ref: "#/definitions/FootprintCategory"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
    put:
      description: "Update footprint category"
      operationId: "update_footprints_category"
      parameters:
      - name: "category_id"
        in: "path"
        description: "Category id"
        required: true
        type: "integer"
        format: "int64"
      - in: "body"
        name: "category"
        description: "Category to update"
        required: true
        schema:
          $ref: "#/definitions/FootprintCategoryNew"
      responses:
        200:
          description: "Updated pärt category"
          schema:
            $ref: "#/definitions/FootprintCategory"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
    delete:
      description: "Delete footprint category"
      operationId: "delete_footprints_category"
      parameters:
      - name: "category_id"
        in: "path"
        description: "Category id"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "Deleted ok"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
  /footprints:
    get:
      description: "Return all footprints"
      operationId: "find_footprints"
      parameters:
      - name: "search"
        in: "query"
        description: "Search for footprint matching pattern"
        required: false
        type: "string"
      responses:
        200:
          description: "List of footprints"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Footprint"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
    post:
      description: "Creates a new footprint"
      operationId: "add_footprint"
      parameters:
      - in: "body"
        name: "footprint"
        description: "Footprint to add"
        required: true
        schema:
          $ref: "#/definitions/FootprintNew"
      - name: "footprint_file"
        in: "formData"
        description: "Footprint to upload"
        required: false
        type: "file"
      - name: "image_file"
        in: "formData"
        description: "Image to upload"
        required: false
        type: "file"
      responses:
        200:
          description: "Created footprint"
          schema:
            $ref: "#/definitions/Footprint"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
  /footprints/{footprint_id}:
    get:
      description: "Return a footprint"
      operationId: "find_footprint"
      parameters:
      - name: "footprint_id"
        in: "path"
        description: "Footprint id"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "Categories"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Footprint"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
    put:
      description: "Update footprint"
      operationId: "update_footprint"
      parameters:
      - name: "footprint_id"
        in: "path"
        description: "Footprint id"
        required: true
        type: "integer"
        format: "int64"
      - in: "body"
        name: "footprint"
        description: "Footprint to update"
        required: true
        schema:
          $ref: "#/definitions/FootprintNew"
      - name: "footprint_file"
        in: "formData"
        description: "Footprint to upload"
        required: false
        type: "file"
      - name: "image_file"
        in: "formData"
        description: "Image to upload"
        required: false
        type: "file"
      responses:
        200:
          description: "Updated pärt"
          schema:
            $ref: "#/definitions/Footprint"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
    delete:
      description: "Delete footprint"
      operationId: "delete_footprint"
      parameters:
      - name: "footprint_id"
        in: "path"
        description: "Footprint id"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "Deleted ok"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
  /distributors:
    get:
      description: "Return all distributors"
      operationId: "find_distributors"
      parameters:
      - name: "name"
        in: "query"
        description: "Search distributors matching name"
        required: false
        type: "string"
      responses:
        200:
          description: "List of distributors"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Distributor"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
    post:
      description: "Creates a new distributor"
      operationId: "add_distributor"
      parameters:
      - in: "body"
        name: "distributor"
        description: "Distributor to add"
        required: true
        schema:
          $ref: "#/definitions/DistributorNew"
      responses:
        200:
          description: "Created distributor"
          schema:
            $ref: "#/definitions/Distributor"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
  /distributors/{distributor_id}:
    get:
      description: "Return a distributor"
      operationId: "find_distributor"
      parameters:
      - name: "distributor_id"
        in: "path"
        description: "Distributor id"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "Distributors"
          schema:
            $ref: "#/definitions/Distributor"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
    put:
      description: "Update a distributor"
      operationId: "update_distributor"
      parameters:
      - name: "distributor_id"
        in: "path"
        description: "Distributor id"
        required: true
        type: "integer"
        format: "int64"
      - in: "body"
        name: "category"
        description: "Distributor to update"
        required: true
        schema:
          $ref: "#/definitions/DistributorNew"
      responses:
        200:
          description: "Updated distributor"
          schema:
            $ref: "#/definitions/Distributor"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
    delete:
      description: "Delete distributor"
      operationId: "delete_distributor"
      parameters:
      - name: "distributor_id"
        in: "path"
        description: "Distributor id"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "Deleted ok"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
  /manufacturers:
    get:
      description: "Return all manufacturers"
      operationId: "find_manufacturers"
      parameters:
      - name: "name"
        in: "query"
        description: "Search manufacturers matching name"
        required: false
        type: "string"
      responses:
        200:
          description: "List of manufacturers"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Manufacturer"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
    post:
      description: "Creates a new manufacturer"
      operationId: "add_manufacturer"
      parameters:
      - in: "body"
        name: "manufacturer"
        description: "Manufacturer to add"
        required: true
        schema:
          $ref: "#/definitions/ManufacturerNew"
      responses:
        200:
          description: "Created manufacturer"
          schema:
            $ref: "#/definitions/Manufacturer"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
  /manufacturers/{manufacturer_id}:
    get:
      description: "Return a manufacturer"
      operationId: "find_manufacturer"
      parameters:
      - name: "manufacturer_id"
        in: "path"
        description: "Manufacturer id"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "Manufacturer"
          schema:
            $ref: "#/definitions/Manufacturer"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
    put:
      description: "Update a manufacturer"
      operationId: "update_manufacturer"
      parameters:
      - name: "manufacturer_id"
        in: "path"
        description: "Manufacturer id"
        required: true
        type: "integer"
        format: "int64"
      - in: "body"
        name: "category"
        description: "Manufacturer to update"
        required: true
        schema:
          $ref: "#/definitions/ManufacturerNew"
      responses:
        200:
          description: "Updated manufacturer"
          schema:
            $ref: "#/definitions/Manufacturer"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
    delete:
      description: "Delete manufacturer"
      operationId: "delete_manufacturer"
      parameters:
      - name: "manufacturer_id"
        in: "path"
        description: "Manufacturer id"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "Deleted ok"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
definitions:
  PartCategory:
    allOf:
    - $ref: "#/definitions/PartCategoryData"
    - required:
      - "id"
      properties:
        id:
          type: "integer"
          format: "int64"
        parent:
          $ref: "#/definitions/PartCategoryRef"
        childs:
          type: "array"
          items:
            $ref: "#/definitions/PartCategory"
        path:
          type: "string"
  Error:
    type: "object"
    required:
    - "code"
    - "message"
    properties:
      code:
        type: "integer"
        format: "int32"
      message:
        type: "string"
  PartCategoryNew:
    allOf:
    - $ref: "#/definitions/PartCategoryData"
    - properties:
        parent:
          $ref: "#/definitions/PartCategoryRef"
  Part:
    allOf:
    - $ref: "#/definitions/PartData"
    - required:
      - "id"
      properties:
        id:
          type: "integer"
          format: "int64"
        category:
          $ref: "#/definitions/PartCategory"
        has_childs:
          type: "integer"
          format: "int64"
        childs:
          type: "array"
          items:
            $ref: "#/definitions/Part"
        footprint:
          $ref: "#/definitions/Footprint"
        parameters:
          type: "array"
          items:
            $ref: "#/definitions/PartParameter"
        distributors:
          type: "array"
          items:
            $ref: "#/definitions/PartDistributor"
        manufacturers:
          type: "array"
          items:
            $ref: "#/definitions/PartManufacturer"
  PartNew:
    allOf:
    - $ref: "#/definitions/PartData"
    - properties:
        category:
          $ref: "#/definitions/PartCategoryRef"
        childs:
          type: "array"
          items:
            $ref: "#/definitions/PartRef"
        footprint:
          $ref: "#/definitions/FootprintRef"
        parameters:
          type: "array"
          items:
            $ref: "#/definitions/PartParameter"
        distributors:
          type: "array"
          items:
            $ref: "#/definitions/PartDistributor"
        manufacturers:
          type: "array"
          items:
            $ref: "#/definitions/PartManufacturer"
  Unit:
    type: "object"
    required:
    - "id"
    - "name"
    - "symbol"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
      symbol:
        type: "string"
  UnitPrefix:
    type: "object"
    required:
    - "id"
    - "name"
    - "power"
    - "symbol"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
      symbol:
        type: "string"
      power:
        type: "string"
  FootprintCategory:
    allOf:
    - $ref: "#/definitions/FootprintCategoryData"
    - required:
      - "id"
      properties:
        id:
          type: "integer"
          format: "int64"
        parent:
          $ref: "#/definitions/FootprintCategoryRef"
        childs:
          type: "array"
          items:
            $ref: "#/definitions/FootprintCategory"
        path:
          type: "string"
  FootprintCategoryNew:
    allOf:
    - $ref: "#/definitions/FootprintCategoryData"
    - properties:
        parent:
          $ref: "#/definitions/FootprintCategoryRef"
  Footprint:
    allOf:
    - $ref: "#/definitions/FootprintData"
    - required:
      - "id"
      properties:
        id:
          type: "integer"
          format: "int64"
        category:
          $ref: "#/definitions/FootprintCategory"
        image:
          type: "string"
        footprint:
          type: "string"
  FootprintNew:
    allOf:
    - $ref: "#/definitions/FootprintData"
    - properties:
        category:
          $ref: "#/definitions/FootprintCategoryRef"
  Distributor:
    allOf:
    - $ref: "#/definitions/DistributorData"
    - required:
      - "id"
      properties:
        id:
          type: "integer"
          format: "int64"
  DistributorNew:
    allOf:
    - $ref: "#/definitions/DistributorData"
    - {}
  Manufacturer:
    allOf:
    - $ref: "#/definitions/ManufacturerData"
    - required:
      - "id"
      properties:
        id:
          type: "integer"
          format: "int64"
  ManufacturerNew:
    allOf:
    - $ref: "#/definitions/ManufacturerData"
    - {}
  FootprintData:
    type: "object"
    properties:
      name:
        type: "string"
      description:
        type: "string"
      comment:
        type: "string"
      snapeda:
        type: "string"
  FootprintCategoryData:
    type: "object"
    properties:
      name:
        type: "string"
      description:
        type: "string"
  FootprintCategoryRef:
    type: "object"
    required:
    - "id"
    properties:
      id:
        type: "integer"
        format: "int64"
  PartCategoryData:
    type: "object"
    properties:
      name:
        type: "string"
      description:
        type: "string"
  PartCategoryRef:
    type: "object"
    required:
    - "id"
    properties:
      id:
        type: "integer"
        format: "int64"
  DistributorData:
    type: "object"
    properties:
      name:
        type: "string"
      address:
        type: "string"
      website:
        type: "string"
      sku_url:
        type: "string"
      email:
        type: "string"
      phone:
        type: "string"
      comment:
        type: "string"
  ManufacturerData:
    type: "object"
    properties:
      name:
        type: "string"
      address:
        type: "string"
      website:
        type: "string"
      email:
        type: "string"
      phone:
        type: "string"
      comment:
        type: "string"
  PartData:
    type: "object"
    properties:
      name:
        type: "string"
      description:
        type: "string"
      comment:
        type: "string"
      octopart:
        type: "string"
      updated:
        type: "string"
        format: "date-time"
  PartParameter:
    allOf:
    - $ref: "#/definitions/PartParameterData"
    - {}
  PartDistributor:
    allOf:
    - $ref: "#/definitions/DistributorData"
    - properties:
        id:
          type: "integer"
          format: "int64"
        offers:
          type: "array"
          items:
            $ref: "#/definitions/PartOffer"
  PartManufacturer:
    allOf:
    - $ref: "#/definitions/ManufacturerData"
    - properties:
        id:
          type: "integer"
          format: "int64"
        part_name:
          type: "string"
  PartRef:
    type: "object"
    required:
    - "id"
    properties:
      id:
        type: "integer"
        format: "int64"
  FootprintRef:
    type: "object"
    required:
    - "id"
    properties:
      id:
        type: "integer"
        format: "int64"
  PartParameterData:
    type: "object"
    properties:
      name:
        type: "string"
      description:
        type: "string"
      unit:
        $ref: "#/definitions/Unit"
      numeric:
        type: "boolean"
      text_value:
        type: "string"
      min_value:
        type: "number"
        format: "double"
      min_prefix:
        $ref: "#/definitions/UnitPrefix"
      nom_value:
        type: "number"
        format: "double"
      nom_prefix:
        $ref: "#/definitions/UnitPrefix"
      max_value:
        type: "number"
        format: "double"
      max_prefix:
        $ref: "#/definitions/UnitPrefix"
  PartOffer:
    allOf:
    - $ref: "#/definitions/PartOfferData"
    - {}
  PartOfferData:
    type: "object"
    properties:
      packaging_unit:
        type: "integer"
        format: "int64"
      quantity:
        type: "number"
        format: "double"
      unit_price:
        type: "number"
        format: "double"
      currency:
        type: "string"
      sku:
        type: "string"
      updated:
        type: "string"
        format: "dateTime"
