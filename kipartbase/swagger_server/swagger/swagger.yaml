---
swagger: "2.0"
info:
  description: "Kipartman api specifications"
  version: "1.0.0"
  title: "Kipartman"
  termsOfService: "http://swagger.io/terms/"
  contact:
    name: "Sebastien Besombes"
    url: "https://github.com/turdusmerula/kipartman"
    email: "--"
  license:
    name: "GPL V3"
    url: "https://raw.githubusercontent.com/turdusmerula/kipartman/master/LICENSE"
host: "localhost:8200"
basePath: "/api"
schemes:
- "http"
consumes:
- "application/json"
produces:
- "application/json"
paths:
  /parts/categories:
    get:
      description: "Return all categories for parts"
      operationId: "find_parts_categories"
      parameters: []
      responses:
        200:
          description: "List of categories"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/PartCategory"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
    post:
      description: "Creates a new part category"
      operationId: "add_parts_category"
      parameters:
      - in: "body"
        name: "category"
        description: "Category to add"
        required: true
        schema:
          $ref: "#/definitions/PartCategoryNew"
      responses:
        200:
          description: "Created category"
          schema:
            $ref: "#/definitions/PartCategory"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
  /parts/categories/{category_id}:
    get:
      description: "Return a part category"
      operationId: "find_parts_category"
      parameters:
      - name: "category_id"
        in: "path"
        description: "Category id"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "Categories"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/PartCategoryTree"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
    put:
      description: "Update part category"
      operationId: "update_parts_category"
      parameters:
      - name: "category_id"
        in: "path"
        description: "Category id"
        required: true
        type: "integer"
        format: "int64"
      - in: "body"
        name: "category"
        description: "Category to update"
        required: true
        schema:
          $ref: "#/definitions/PartCategoryNew"
      responses:
        200:
          description: "Updated pärt category"
          schema:
            $ref: "#/definitions/PartCategory"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
    delete:
      description: "Delete part category"
      operationId: "delete_parts_category"
      parameters:
      - name: "category_id"
        in: "path"
        description: "Category id"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "Deleted ok"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
  /parts:
    get:
      description: "Return all parts"
      operationId: "find_parts"
      parameters: []
      responses:
        200:
          description: "List of parts"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Part"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
    post:
      description: "Creates a new part"
      operationId: "add_part"
      parameters:
      - in: "body"
        name: "part"
        description: "Part to add"
        required: true
        schema:
          $ref: "#/definitions/PartNew"
      responses:
        200:
          description: "Created part"
          schema:
            $ref: "#/definitions/Part"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
  /parts/{part_id}:
    get:
      description: "Return a part"
      operationId: "find_part"
      parameters:
      - name: "part_id"
        in: "path"
        description: "Part id"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "Categories"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/PartTree"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
    put:
      description: "Update part"
      operationId: "update_part"
      parameters:
      - name: "part_id"
        in: "path"
        description: "Part id"
        required: true
        type: "integer"
        format: "int64"
      - in: "body"
        name: "part"
        description: "Part to update"
        required: true
        schema:
          $ref: "#/definitions/PartNew"
      responses:
        200:
          description: "Updated pärt"
          schema:
            $ref: "#/definitions/Part"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
    delete:
      description: "Delete part"
      operationId: "delete_part"
      parameters:
      - name: "part_id"
        in: "path"
        description: "Part id"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "Deleted ok"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
  /parts/{part_id}/parameters:
    get:
      description: "Return all parameters for part"
      operationId: "find_part_parameters"
      parameters:
      - name: "part_id"
        in: "path"
        description: "Part id"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "List of part parameters"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/PartParameter"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
    post:
      description: "Create some new part parameters"
      operationId: "add_part_parameters"
      parameters:
      - name: "part_id"
        in: "path"
        description: "Part id"
        required: true
        type: "integer"
        format: "int64"
      - in: "body"
        name: "parameters"
        description: "Parameters to add"
        required: true
        schema:
          type: "array"
          items:
            $ref: "#/definitions/PartParameterNew"
      responses:
        200:
          description: "Created parameters"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
    put:
      description: "Update list of part parameters"
      operationId: "update_part_parameters"
      parameters:
      - name: "part_id"
        in: "path"
        description: "Part id"
        required: true
        type: "integer"
        format: "int64"
      - in: "body"
        name: "parameters"
        description: "Parameters to update"
        required: true
        schema:
          type: "array"
          items:
            $ref: "#/definitions/PartParameter"
      responses:
        200:
          description: "Created parameters"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
    delete:
      description: "Delete list of part parameters"
      operationId: "delete_part_parameters"
      parameters:
      - name: "part_id"
        in: "path"
        description: "Part id"
        required: true
        type: "integer"
        format: "int64"
      - in: "body"
        name: "parameters"
        description: "Parameters to delete"
        required: true
        schema:
          type: "array"
          items:
            $ref: "#/definitions/PartParameterRef"
      responses:
        200:
          description: "Deleted ok"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
  /parts/{part_id}/parameters/{parameter_id}:
    get:
      description: "Return a part parameter"
      operationId: "find_part_parameter"
      parameters:
      - name: "part_id"
        in: "path"
        description: "Part id"
        required: true
        type: "integer"
        format: "int64"
      - name: "parameter_id"
        in: "path"
        description: "Parameter id"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "Parameter"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/PartParameter"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
    put:
      description: "Update part parameter"
      operationId: "update_part_parameter"
      parameters:
      - name: "part_id"
        in: "path"
        description: "Part id"
        required: true
        type: "integer"
        format: "int64"
      - name: "parameter_id"
        in: "path"
        description: "Parameter id"
        required: true
        type: "integer"
        format: "int64"
      - in: "body"
        name: "category"
        description: "Parameter to update"
        required: true
        schema:
          $ref: "#/definitions/PartParameterNew"
      responses:
        200:
          description: "Updated pärt parameter"
          schema:
            $ref: "#/definitions/PartParameter"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
    delete:
      description: "Delete part parameter"
      operationId: "delete_part_parameter"
      parameters:
      - name: "part_id"
        in: "path"
        description: "Part id"
        required: true
        type: "integer"
        format: "int64"
      - name: "parameter_id"
        in: "path"
        description: "Parameter id"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "Deleted ok"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
  /units:
    get:
      description: "Return list of units"
      operationId: "find_units"
      parameters: []
      responses:
        200:
          description: "Units"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Unit"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
  /units/{unit_id}:
    get:
      description: "Return a unit"
      operationId: "find_unit"
      parameters:
      - name: "unit_id"
        in: "path"
        description: "Unit id"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "Unit"
          schema:
            $ref: "#/definitions/Unit"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
  /unitprefixes:
    get:
      description: "Return list of unit prefixes"
      operationId: "find_unit_prefixes"
      parameters: []
      responses:
        200:
          description: "Unit prefixes"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/UnitPrefix"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
  /unitprefixes/{unit_prefix_id}:
    get:
      description: "Return a unit prefixes"
      operationId: "find_unit_prefix"
      parameters:
      - name: "unit_prefix_id"
        in: "path"
        description: "Unit prefix id"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "Unit prefix"
          schema:
            $ref: "#/definitions/UnitPrefix"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
definitions:
  PartCategory:
    allOf:
    - $ref: "#/definitions/PartCategoryData"
    - required:
      - "id"
      properties:
        id:
          type: "integer"
          format: "int64"
        parent:
          $ref: "#/definitions/PartCategoryRef"
        childs:
          type: "array"
          items:
            $ref: "#/definitions/PartCategory"
  Error:
    type: "object"
    required:
    - "code"
    - "message"
    properties:
      code:
        type: "integer"
        format: "int32"
      message:
        type: "string"
  PartCategoryNew:
    allOf:
    - $ref: "#/definitions/PartCategoryData"
    - properties:
        parent:
          $ref: "#/definitions/PartCategoryRef"
  PartCategoryTree:
    allOf:
    - $ref: "#/definitions/PartCategoryData"
    - required:
      - "id"
      properties:
        id:
          type: "integer"
          format: "int64"
        parent:
          $ref: "#/definitions/PartCategoryTree"
  Part:
    allOf:
    - $ref: "#/definitions/PartData"
    - required:
      - "id"
      properties:
        id:
          type: "integer"
          format: "int64"
        category:
          $ref: "#/definitions/PartCategoryRef"
        has_childs:
          type: "boolean"
  PartNew:
    allOf:
    - $ref: "#/definitions/PartData"
    - properties:
        category:
          $ref: "#/definitions/PartCategoryRef"
        childs:
          type: "array"
          items:
            $ref: "#/definitions/PartRef"
  PartTree:
    allOf:
    - $ref: "#/definitions/PartData"
    - required:
      - "id"
      properties:
        id:
          type: "integer"
          format: "int64"
        category:
          $ref: "#/definitions/PartCategoryTree"
        childs:
          type: "array"
          items:
            $ref: "#/definitions/PartTree"
        has_childs:
          type: "boolean"
  PartParameter:
    allOf:
    - $ref: "#/definitions/PartParameterData"
    - required:
      - "id"
      properties:
        id:
          type: "integer"
          format: "int64"
  PartParameterNew:
    allOf:
    - $ref: "#/definitions/PartParameterData"
    - {}
  PartParameterRef:
    type: "object"
    required:
    - "id"
    properties:
      id:
        type: "integer"
        format: "int64"
  Unit:
    type: "object"
    required:
    - "id"
    - "name"
    - "symbol"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
      symbol:
        type: "string"
  UnitPrefix:
    type: "object"
    required:
    - "id"
    - "name"
    - "power"
    - "symbol"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
      symbol:
        type: "string"
      power:
        type: "string"
  PartCategoryData:
    type: "object"
    required:
    - "name"
    properties:
      name:
        type: "string"
  PartData:
    type: "object"
    required:
    - "comment"
    - "description"
    - "name"
    properties:
      name:
        type: "string"
      description:
        type: "string"
      parameters:
        type: "array"
        items:
          $ref: "#/definitions/PartParameter"
      comment:
        type: "string"
      octopart:
        type: "string"
      updated:
        type: "string"
        format: "date-time"
  PartCategoryRef:
    type: "object"
    required:
    - "id"
    properties:
      id:
        type: "integer"
        format: "int64"
  PartParameterData:
    type: "object"
    required:
    - "description"
    - "name"
    - "numeric"
    properties:
      name:
        type: "string"
      description:
        type: "string"
      unit:
        $ref: "#/definitions/Unit"
      numeric:
        type: "boolean"
      text_value:
        type: "string"
      min_prefix:
        $ref: "#/definitions/UnitPrefix"
      nom_prefix:
        $ref: "#/definitions/UnitPrefix"
      max_prefix:
        $ref: "#/definitions/UnitPrefix"
  PartRef:
    type: "object"
    required:
    - "id"
    properties:
      id:
        type: "integer"
        format: "int64"
